# 设置参数
all_vars_list=["CU", "abc", "NI", "WR"] # 所有品种
start_day="20180712" # 开始时间
end_day="20180719" # 结束时间

import akshare as ak

# 下载数据
receiptData = []
vars_list_remove = []
for sym in all_vars_list:
  data = ak.get_receipt(start_day=start_day, end_day=end_day, vars_list=[sym])
  if len(data) > 0 and not 0 in data['receipt'].values: # 真正取回了数据, 且分母不为0 
    changed = data.apply(lambda x: (x['receipt_chg'] / x['receipt'] + 1), axis=1) # 变化到原来的比率
    receiptData.append(changed.cumprod())  # 累积变化比率
  else:
    vars_list_remove.append(sym)
  # print (data)
  
receiptData.append(data[['date']]) # 添加日期列

# 删除没有取回的数据的品种
for sym in vars_list_remove:
  all_vars_list.remove(sym)
  
all_vars_list.append('date') #列名
  
# 数据结果为result
import pandas as pd
result = pd.concat(receiptData, axis=1, sort=False)
result.columns = all_vars_list #列名

# 存成csv文件
result.to_csv("result.csv")
#######################################################################################
# 画图
import plotly.express as px
# df = px.data.stocks()
fig = px.line(result, x="date", y=result.columns,
              hover_data={"date": "|%B %d, %Y"},
              title='custom tick labels with ticklabelmode="period"')
fig.update_xaxes(
    dtick="M1",
    tickformat="%b\n%Y",
    ticklabelmode="period")
fig.show()

