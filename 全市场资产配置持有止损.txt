# python script
import sys
startDate = sys.argv[1] # '2020-09-09'
generateAnotherAccount = False

startDaySeries = df[startDate]
startDaySeries = startDaySeries[np.NaN != startDaySeries] # 去掉NaN非法数据
longSymbols = list(oneDaySeries.columns)
shortSymbols = list(oneDaySeries.columns)
for oneDay in df:
  mostLossSymLong = getMostLossSymLong(oneDay) # 有可能返回None, 返回下跌幅度最大的
  mostLossSymShort = getMostLossSymShort(oneDay)
  if mostLossSym in symbols: # 在sym列表内就删除
    stopLoss(mostChangeSym)
  elif (not generateAnotherAccount) and (None != mostLossSym): # 如果没建立过新帐户,就建立一个新帐户. 如果返回的是新品种, 也会建立新帐户
    generateNewAccount(oneDayDate)
    generateAnotherAccount = True
  else:
    #ignore today's mostChange # 没有下跌的,或已建立过新帐户,则忽略

# 执行新帐户的脚本, 各帐户呈链式执行
import subprocess
subprocess.run(["ls", "-l"])

import os
cmd = "git --version"
returned_value = os.system(cmd)  # returns the exit code in unix
print('returned value:', returned_value)

os.system("kill -9 %d"%(os.getppid()))

  
